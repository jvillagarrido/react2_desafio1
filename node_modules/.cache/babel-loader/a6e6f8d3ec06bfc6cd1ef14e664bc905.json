{"ast":null,"code":"import _objectWithoutProperties from \"C:/01_jvg/Codefactory/react-cli/tarea2 - copia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"C:/01_jvg/Codefactory/react-cli/tarea2 - copia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/01_jvg/Codefactory/react-cli/tarea2 - copia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"C:/01_jvg/Codefactory/react-cli/tarea2 - copia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/01_jvg/Codefactory/react-cli/tarea2 - copia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/01_jvg/Codefactory/react-cli/tarea2 - copia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"alignment\", \"allowedPlacements\", \"autoAlignment\"],\n  _excluded2 = [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"fallbackAxisSideDirection\", \"flipAlignment\"],\n  _excluded3 = [\"strategy\"],\n  _excluded4 = [\"mainAxis\", \"crossAxis\", \"limiter\"],\n  _excluded5 = [\"apply\"];\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n    floating = _ref.floating;\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var commonAlign = reference[length] / 2 - floating[length] / 2;\n  var side = getSide(placement);\n  var isVertical = mainAxis === 'x';\n  var coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n          validMiddleware = middleware.filter(Boolean);\n          _context.next = 4;\n          return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n        case 4:\n          rtl = _context.sent;\n          if (!(process.env.NODE_ENV !== \"production\")) {\n            _context.next = 10;\n            break;\n          }\n          if (platform == null) {\n            console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n          }\n          if (!(validMiddleware.filter(function (_ref) {\n            var name = _ref.name;\n            return name === 'autoPlacement' || name === 'flip';\n          }).length > 1)) {\n            _context.next = 9;\n            break;\n          }\n          throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement` middleware', 'detected. This will lead to an infinite loop. Ensure only one of', 'either has been passed to the `middleware` array.'].join(' '));\n        case 9:\n          if (!reference || !floating) {\n            console.error(['Floating UI: The reference and/or floating element was not defined', 'when `computePosition()` was called. Ensure that both elements have', 'been created and can be measured.'].join(' '));\n          }\n        case 10:\n          _context.next = 12;\n          return platform.getElementRects({\n            reference: reference,\n            floating: floating,\n            strategy: strategy\n          });\n        case 12:\n          rects = _context.sent;\n          _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n          statefulPlacement = placement;\n          middlewareData = {};\n          resetCount = 0;\n          i = 0;\n        case 18:\n          if (!(i < validMiddleware.length)) {\n            _context.next = 52;\n            break;\n          }\n          _validMiddleware$i = validMiddleware[i], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;\n          _context.next = 22;\n          return fn({\n            x: x,\n            y: y,\n            initialPlacement: placement,\n            placement: statefulPlacement,\n            strategy: strategy,\n            middlewareData: middlewareData,\n            rects: rects,\n            platform: platform,\n            elements: {\n              reference: reference,\n              floating: floating\n            }\n          });\n        case 22:\n          _yield$fn = _context.sent;\n          nextX = _yield$fn.x;\n          nextY = _yield$fn.y;\n          data = _yield$fn.data;\n          reset = _yield$fn.reset;\n          x = nextX != null ? nextX : x;\n          y = nextY != null ? nextY : y;\n          middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n          if (process.env.NODE_ENV !== \"production\") {\n            if (resetCount > 50) {\n              console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n            }\n          }\n          if (!(reset && resetCount <= 50)) {\n            _context.next = 49;\n            break;\n          }\n          resetCount++;\n          if (!(typeof reset === 'object')) {\n            _context.next = 47;\n            break;\n          }\n          if (reset.placement) {\n            statefulPlacement = reset.placement;\n          }\n          if (!reset.rects) {\n            _context.next = 44;\n            break;\n          }\n          if (!(reset.rects === true)) {\n            _context.next = 42;\n            break;\n          }\n          _context.next = 39;\n          return platform.getElementRects({\n            reference: reference,\n            floating: floating,\n            strategy: strategy\n          });\n        case 39:\n          _context.t0 = _context.sent;\n          _context.next = 43;\n          break;\n        case 42:\n          _context.t0 = reset.rects;\n        case 43:\n          rects = _context.t0;\n        case 44:\n          _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n          x = _computeCoordsFromPla2.x;\n          y = _computeCoordsFromPla2.y;\n        case 47:\n          i = -1;\n          return _context.abrupt(\"continue\", 49);\n        case 49:\n          i++;\n          _context.next = 18;\n          break;\n        case 52:\n          return _context.abrupt(\"return\", {\n            x: x,\n            y: y,\n            placement: statefulPlacement,\n            strategy: strategy,\n            middlewareData: middlewareData\n          });\n        case 53:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nfunction expandPaddingObject(padding) {\n  return _objectSpread({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, padding);\n}\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return _objectSpread(_objectSpread({}, rect), {}, {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(middlewareArguments, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _options8, _options8$boundary, boundary, _options8$rootBoundar, rootBoundary, _options8$elementCont, elementContext, _options8$altBoundary, altBoundary, _options8$padding, padding, paddingObject, altContext, element, clippingClientRect, rect, offsetParent, offsetScale, elementClientRect;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          if (options === void 0) {\n            options = {};\n          }\n          x = middlewareArguments.x, y = middlewareArguments.y, platform = middlewareArguments.platform, rects = middlewareArguments.rects, elements = middlewareArguments.elements, strategy = middlewareArguments.strategy;\n          _options8 = options, _options8$boundary = _options8.boundary, boundary = _options8$boundary === void 0 ? 'clippingAncestors' : _options8$boundary, _options8$rootBoundar = _options8.rootBoundary, rootBoundary = _options8$rootBoundar === void 0 ? 'viewport' : _options8$rootBoundar, _options8$elementCont = _options8.elementContext, elementContext = _options8$elementCont === void 0 ? 'floating' : _options8$elementCont, _options8$altBoundary = _options8.altBoundary, altBoundary = _options8$altBoundary === void 0 ? false : _options8$altBoundary, _options8$padding = _options8.padding, padding = _options8$padding === void 0 ? 0 : _options8$padding;\n          paddingObject = getSideObjectFromPadding(padding);\n          altContext = elementContext === 'floating' ? 'reference' : 'floating';\n          element = elements[altBoundary ? altContext : elementContext];\n          _context10.t0 = rectToClientRect;\n          _context10.t1 = platform;\n          _context10.next = 10;\n          return platform.isElement == null ? void 0 : platform.isElement(element);\n        case 10:\n          _context10.t2 = _await$platform$isEle = _context10.sent;\n          if (!(_context10.t2 != null)) {\n            _context10.next = 15;\n            break;\n          }\n          _context10.t3 = _await$platform$isEle;\n          _context10.next = 16;\n          break;\n        case 15:\n          _context10.t3 = true;\n        case 16:\n          if (!_context10.t3) {\n            _context10.next = 20;\n            break;\n          }\n          _context10.t4 = element;\n          _context10.next = 26;\n          break;\n        case 20:\n          _context10.t5 = element.contextElement;\n          if (_context10.t5) {\n            _context10.next = 25;\n            break;\n          }\n          _context10.next = 24;\n          return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n        case 24:\n          _context10.t5 = _context10.sent;\n        case 25:\n          _context10.t4 = _context10.t5;\n        case 26:\n          _context10.t6 = _context10.t4;\n          _context10.t7 = boundary;\n          _context10.t8 = rootBoundary;\n          _context10.t9 = strategy;\n          _context10.t10 = {\n            element: _context10.t6,\n            boundary: _context10.t7,\n            rootBoundary: _context10.t8,\n            strategy: _context10.t9\n          };\n          _context10.next = 33;\n          return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n        case 33:\n          _context10.t11 = _context10.sent;\n          clippingClientRect = (0, _context10.t0)(_context10.t11);\n          rect = elementContext === 'floating' ? _objectSpread(_objectSpread({}, rects.floating), {}, {\n            x: x,\n            y: y\n          }) : rects.reference;\n          _context10.next = 38;\n          return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n        case 38:\n          offsetParent = _context10.sent;\n          _context10.next = 41;\n          return platform.isElement == null ? void 0 : platform.isElement(offsetParent);\n        case 41:\n          if (!_context10.sent) {\n            _context10.next = 50;\n            break;\n          }\n          _context10.next = 44;\n          return platform.getScale == null ? void 0 : platform.getScale(offsetParent);\n        case 44:\n          _context10.t13 = _context10.sent;\n          if (_context10.t13) {\n            _context10.next = 47;\n            break;\n          }\n          _context10.t13 = {\n            x: 1,\n            y: 1\n          };\n        case 47:\n          _context10.t12 = _context10.t13;\n          _context10.next = 51;\n          break;\n        case 50:\n          _context10.t12 = {\n            x: 1,\n            y: 1\n          };\n        case 51:\n          offsetScale = _context10.t12;\n          _context10.t14 = rectToClientRect;\n          if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n            _context10.next = 59;\n            break;\n          }\n          _context10.next = 56;\n          return platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n            rect: rect,\n            offsetParent: offsetParent,\n            strategy: strategy\n          });\n        case 56:\n          _context10.t15 = _context10.sent;\n          _context10.next = 60;\n          break;\n        case 59:\n          _context10.t15 = rect;\n        case 60:\n          _context10.t16 = _context10.t15;\n          elementClientRect = (0, _context10.t14)(_context10.t16);\n          if (process.env.NODE_ENV !== \"production\") ;\n          return _context10.abrupt(\"return\", {\n            top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n            bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n            left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n            right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n          });\n        case 64:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\nvar min = Math.min;\nvar max = Math.max;\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _data, _ref4;\n        var _ref3, element, _ref3$padding, padding, x, y, placement, rects, platform, paddingObject, coords, axis, length, arrowDimensions, minProp, maxProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, min, max, center, offset, shouldAddOffset, alignmentOffset;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // Since `element` is required, we don't Partial<> the type.\n              _ref3 = options || {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n              x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform;\n              if (!(element == null)) {\n                _context2.next = 5;\n                break;\n              }\n              if (process.env.NODE_ENV !== \"production\") {\n                console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n              }\n              return _context2.abrupt(\"return\", {});\n            case 5:\n              paddingObject = getSideObjectFromPadding(padding);\n              coords = {\n                x: x,\n                y: y\n              };\n              axis = getMainAxisFromPlacement(placement);\n              length = getLengthFromAxis(axis);\n              _context2.next = 11;\n              return platform.getDimensions(element);\n            case 11:\n              arrowDimensions = _context2.sent;\n              minProp = axis === 'y' ? 'top' : 'left';\n              maxProp = axis === 'y' ? 'bottom' : 'right';\n              endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n              startDiff = coords[axis] - rects.reference[axis];\n              _context2.next = 18;\n              return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n            case 18:\n              arrowOffsetParent = _context2.sent;\n              clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n              if (clientSize === 0) {\n                clientSize = rects.floating[length];\n              }\n              centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n              // point is outside the floating element's bounds.\n              min = paddingObject[minProp];\n              max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n              center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n              offset = within(min, center, max); // If the reference is small enough that the arrow's padding causes it to\n              // to point to nothing for an aligned placement, adjust the offset of the\n              // floating element itself. This stops `shift()` from taking action, but can\n              // be worked around by calling it again after the `arrow()` if desired.\n              shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;\n              alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n              return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] - alignmentOffset), _defineProperty(_ref4, \"data\", (_data = {}, _defineProperty(_data, axis, offset), _defineProperty(_data, \"centerOffset\", center - offset), _data)), _ref4));\n            case 29:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\nvar sides = ['top', 'right', 'bottom', 'left'];\nvar allPlacements = /*#__PURE__*/sides.reduce(function (acc, side) {\n  return acc.concat(side, side + \"-start\", side + \"-end\");\n}, []);\nvar oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (side) {\n    return oppositeSideMap[side];\n  });\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  var alignment = getAlignment(placement);\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\nvar oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, function (alignment) {\n    return oppositeAlignmentMap[alignment];\n  });\n}\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _placementsSortedByLe, rects, middlewareData, placement, platform, elements, _options, alignment, _options$allowedPlace, allowedPlacements, _options$autoAlignmen, autoAlignment, detectOverflowOptions, placements, overflow, currentIndex, currentPlacement, _getAlignmentSides, main, cross, currentOverflows, allOverflows, nextPlacement, placementsSortedByLeastOverflow, placementThatFitsOnAllSides, resetPlacement;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              rects = middlewareArguments.rects, middlewareData = middlewareArguments.middlewareData, placement = middlewareArguments.placement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n              _options = options, alignment = _options.alignment, _options$allowedPlace = _options.allowedPlacements, allowedPlacements = _options$allowedPlace === void 0 ? allPlacements : _options$allowedPlace, _options$autoAlignmen = _options.autoAlignment, autoAlignment = _options$autoAlignmen === void 0 ? true : _options$autoAlignmen, detectOverflowOptions = _objectWithoutProperties(_options, _excluded);\n              placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n              _context3.next = 5;\n              return detectOverflow(middlewareArguments, detectOverflowOptions);\n            case 5:\n              overflow = _context3.sent;\n              currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n              currentPlacement = placements[currentIndex];\n              if (!(currentPlacement == null)) {\n                _context3.next = 10;\n                break;\n              }\n              return _context3.abrupt(\"return\", {});\n            case 10:\n              _context3.t0 = getAlignmentSides;\n              _context3.t1 = currentPlacement;\n              _context3.t2 = rects;\n              _context3.next = 15;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 15:\n              _context3.t3 = _context3.sent;\n              _getAlignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n              main = _getAlignmentSides.main;\n              cross = _getAlignmentSides.cross;\n              if (!(placement !== currentPlacement)) {\n                _context3.next = 21;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                reset: {\n                  placement: placements[0]\n                }\n              });\n            case 21:\n              currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n              allOverflows = [].concat(_toConsumableArray(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), [{\n                placement: currentPlacement,\n                overflows: currentOverflows\n              }]);\n              nextPlacement = placements[currentIndex + 1]; // There are more placements to check.\n              if (!nextPlacement) {\n                _context3.next = 26;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  index: currentIndex + 1,\n                  overflows: allOverflows\n                },\n                reset: {\n                  placement: nextPlacement\n                }\n              });\n            case 26:\n              placementsSortedByLeastOverflow = allOverflows.slice().sort(function (a, b) {\n                return a.overflows[0] - b.overflows[0];\n              });\n              placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(function (_ref) {\n                var overflows = _ref.overflows;\n                return overflows.every(function (overflow) {\n                  return overflow <= 0;\n                });\n              })) == null ? void 0 : _placementsSortedByLe.placement;\n              resetPlacement = placementThatFitsOnAllSides || placementsSortedByLeastOverflow[0].placement;\n              if (!(resetPlacement !== placement)) {\n                _context3.next = 31;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  index: currentIndex + 1,\n                  overflows: allOverflows\n                },\n                reset: {\n                  placement: resetPlacement\n                }\n              });\n            case 31:\n              return _context3.abrupt(\"return\", {});\n            case 32:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\nfunction getExpandedPlacements(placement) {\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getSideList(side, isStart, rtl) {\n  var lr = ['left', 'right'];\n  var rl = ['right', 'left'];\n  var tb = ['top', 'bottom'];\n  var bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  var alignment = getAlignment(placement);\n  var list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(function (side) {\n      return side + \"-\" + alignment;\n    });\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _options2, _options2$mainAxis, checkMainAxis, _options2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _options2$fallbackStr, fallbackStrategy, _options2$fallbackAxi, fallbackAxisSideDirection, _options2$flipAlignme, flipAlignment, detectOverflowOptions, side, isBasePlacement, rtl, fallbackPlacements, placements, overflow, overflows, overflowsData, _getAlignmentSides2, main, cross, _middlewareData$flip2, _overflowsData$find, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              placement = middlewareArguments.placement, middlewareData = middlewareArguments.middlewareData, rects = middlewareArguments.rects, initialPlacement = middlewareArguments.initialPlacement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n              _options2 = options, _options2$mainAxis = _options2.mainAxis, checkMainAxis = _options2$mainAxis === void 0 ? true : _options2$mainAxis, _options2$crossAxis = _options2.crossAxis, checkCrossAxis = _options2$crossAxis === void 0 ? true : _options2$crossAxis, specifiedFallbackPlacements = _options2.fallbackPlacements, _options2$fallbackStr = _options2.fallbackStrategy, fallbackStrategy = _options2$fallbackStr === void 0 ? 'bestFit' : _options2$fallbackStr, _options2$fallbackAxi = _options2.fallbackAxisSideDirection, fallbackAxisSideDirection = _options2$fallbackAxi === void 0 ? 'none' : _options2$fallbackAxi, _options2$flipAlignme = _options2.flipAlignment, flipAlignment = _options2$flipAlignme === void 0 ? true : _options2$flipAlignme, detectOverflowOptions = _objectWithoutProperties(_options2, _excluded2);\n              side = getSide(placement);\n              isBasePlacement = getSide(initialPlacement) === initialPlacement;\n              _context4.next = 6;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 6:\n              rtl = _context4.sent;\n              fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n              if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n                fallbackPlacements.push.apply(fallbackPlacements, _toConsumableArray(getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl)));\n              }\n              placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n              _context4.next = 12;\n              return detectOverflow(middlewareArguments, detectOverflowOptions);\n            case 12:\n              overflow = _context4.sent;\n              overflows = [];\n              overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n              if (checkMainAxis) {\n                overflows.push(overflow[side]);\n              }\n              if (checkCrossAxis) {\n                _getAlignmentSides2 = getAlignmentSides(placement, rects, rtl), main = _getAlignmentSides2.main, cross = _getAlignmentSides2.cross;\n                overflows.push(overflow[main], overflow[cross]);\n              }\n              overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                placement: placement,\n                overflows: overflows\n              }]);\n\n              // One or more sides is overflowing.\n              if (overflows.every(function (side) {\n                return side <= 0;\n              })) {\n                _context4.next = 35;\n                break;\n              }\n              nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n              nextPlacement = placements[nextIndex];\n              if (!nextPlacement) {\n                _context4.next = 23;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                data: {\n                  index: nextIndex,\n                  overflows: overflowsData\n                },\n                reset: {\n                  placement: nextPlacement\n                }\n              });\n            case 23:\n              // First, try to use the one that fits on mainAxis side of overflow.\n              resetPlacement = (_overflowsData$find = overflowsData.find(function (d) {\n                return d.overflows[0] <= 0;\n              })) == null ? void 0 : _overflowsData$find.placement; // Otherwise fallback.\n              if (resetPlacement) {\n                _context4.next = 33;\n                break;\n              }\n              _context4.t0 = fallbackStrategy;\n              _context4.next = _context4.t0 === 'bestFit' ? 28 : _context4.t0 === 'initialPlacement' ? 31 : 33;\n              break;\n            case 28:\n              _placement = (_overflowsData$map$so = overflowsData.map(function (d) {\n                return [d.placement, d.overflows.filter(function (overflow) {\n                  return overflow > 0;\n                }).reduce(function (acc, overflow) {\n                  return acc + overflow;\n                }, 0)];\n              }).sort(function (a, b) {\n                return a[1] - b[1];\n              })[0]) == null ? void 0 : _overflowsData$map$so[0];\n              if (_placement) {\n                resetPlacement = _placement;\n              }\n              return _context4.abrupt(\"break\", 33);\n            case 31:\n              resetPlacement = initialPlacement;\n              return _context4.abrupt(\"break\", 33);\n            case 33:\n              if (!(placement !== resetPlacement)) {\n                _context4.next = 35;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                reset: {\n                  placement: resetPlacement\n                }\n              });\n            case 35:\n              return _context4.abrupt(\"return\", {});\n            case 36:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nvar hide = function hide(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _options3, _options3$strategy, strategy, detectOverflowOptions, rects, overflow, offsets, _overflow, _offsets;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _options3 = options, _options3$strategy = _options3.strategy, strategy = _options3$strategy === void 0 ? 'referenceHidden' : _options3$strategy, detectOverflowOptions = _objectWithoutProperties(_options3, _excluded3);\n              rects = middlewareArguments.rects;\n              _context5.t0 = strategy;\n              _context5.next = _context5.t0 === 'referenceHidden' ? 5 : _context5.t0 === 'escaped' ? 10 : 15;\n              break;\n            case 5:\n              _context5.next = 7;\n              return detectOverflow(middlewareArguments, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                elementContext: 'reference'\n              }));\n            case 7:\n              overflow = _context5.sent;\n              offsets = getSideOffsets(overflow, rects.reference);\n              return _context5.abrupt(\"return\", {\n                data: {\n                  referenceHiddenOffsets: offsets,\n                  referenceHidden: isAnySideFullyClipped(offsets)\n                }\n              });\n            case 10:\n              _context5.next = 12;\n              return detectOverflow(middlewareArguments, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                altBoundary: true\n              }));\n            case 12:\n              _overflow = _context5.sent;\n              _offsets = getSideOffsets(_overflow, rects.floating);\n              return _context5.abrupt(\"return\", {\n                data: {\n                  escapedOffsets: _offsets,\n                  escaped: isAnySideFullyClipped(_offsets)\n                }\n              });\n            case 15:\n              return _context5.abrupt(\"return\", {});\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var placement, elements, rects, platform, strategy, _options4, _options4$padding, padding, x, y, fallback, clientRects, paddingObject, getBoundingClientRect, resetRects;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              getBoundingClientRect = function _getBoundingClientRec() {\n                // There are two rects and they are disjoined.\n                if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                  // Find the first rect in which the point is fully inside.\n                  return clientRects.find(function (rect) {\n                    return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                  }) || fallback;\n                }\n\n                // There are 2 or more connected rects.\n                if (clientRects.length >= 2) {\n                  if (getMainAxisFromPlacement(placement) === 'x') {\n                    var firstRect = clientRects[0];\n                    var lastRect = clientRects[clientRects.length - 1];\n                    var isTop = getSide(placement) === 'top';\n                    var _top = firstRect.top;\n                    var _bottom = lastRect.bottom;\n                    var _left = isTop ? firstRect.left : lastRect.left;\n                    var _right = isTop ? firstRect.right : lastRect.right;\n                    var _width = _right - _left;\n                    var _height = _bottom - _top;\n                    return {\n                      top: _top,\n                      bottom: _bottom,\n                      left: _left,\n                      right: _right,\n                      width: _width,\n                      height: _height,\n                      x: _left,\n                      y: _top\n                    };\n                  }\n                  var isLeftSide = getSide(placement) === 'left';\n                  var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                    return rect.right;\n                  })));\n                  var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                    return rect.left;\n                  })));\n                  var measureRects = clientRects.filter(function (rect) {\n                    return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                  });\n                  var top = measureRects[0].top;\n                  var bottom = measureRects[measureRects.length - 1].bottom;\n                  var left = minLeft;\n                  var right = maxRight;\n                  var width = right - left;\n                  var height = bottom - top;\n                  return {\n                    top: top,\n                    bottom: bottom,\n                    left: left,\n                    right: right,\n                    width: width,\n                    height: height,\n                    x: left,\n                    y: top\n                  };\n                }\n                return fallback;\n              };\n              placement = middlewareArguments.placement, elements = middlewareArguments.elements, rects = middlewareArguments.rects, platform = middlewareArguments.platform, strategy = middlewareArguments.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n              // ClientRect's bounds, despite the event listener being triggered. A\n              // padding of 2 seems to handle this issue.\n              _options4 = options, _options4$padding = _options4.padding, padding = _options4$padding === void 0 ? 2 : _options4$padding, x = _options4.x, y = _options4.y;\n              _context6.t0 = rectToClientRect;\n              if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n                _context6.next = 17;\n                break;\n              }\n              _context6.t2 = platform;\n              _context6.t3 = rects.reference;\n              _context6.next = 9;\n              return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n            case 9:\n              _context6.t4 = _context6.sent;\n              _context6.t5 = strategy;\n              _context6.t6 = {\n                rect: _context6.t3,\n                offsetParent: _context6.t4,\n                strategy: _context6.t5\n              };\n              _context6.next = 14;\n              return _context6.t2.convertOffsetParentRelativeRectToViewportRelativeRect.call(_context6.t2, _context6.t6);\n            case 14:\n              _context6.t1 = _context6.sent;\n              _context6.next = 18;\n              break;\n            case 17:\n              _context6.t1 = rects.reference;\n            case 18:\n              _context6.t7 = _context6.t1;\n              fallback = (0, _context6.t0)(_context6.t7);\n              _context6.next = 22;\n              return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n            case 22:\n              _context6.t8 = _context6.sent;\n              if (_context6.t8) {\n                _context6.next = 25;\n                break;\n              }\n              _context6.t8 = [];\n            case 25:\n              clientRects = _context6.t8;\n              paddingObject = getSideObjectFromPadding(padding);\n              _context6.next = 29;\n              return platform.getElementRects({\n                reference: {\n                  getBoundingClientRect: getBoundingClientRect\n                },\n                floating: elements.floating,\n                strategy: strategy\n              });\n            case 29:\n              resetRects = _context6.sent;\n              if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                _context6.next = 32;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                reset: {\n                  rects: resetRects\n                }\n              });\n            case 32:\n              return _context6.abrupt(\"return\", {});\n            case 33:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(middlewareArguments, value) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref6, mainAxis, crossAxis, alignmentAxis;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          placement = middlewareArguments.placement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n          _context11.next = 3;\n          return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n        case 3:\n          rtl = _context11.sent;\n          side = getSide(placement);\n          alignment = getAlignment(placement);\n          isVertical = getMainAxisFromPlacement(placement) === 'x';\n          mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n          crossAxisMulti = rtl && isVertical ? -1 : 1;\n          rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n          _ref6 = typeof rawValue === 'number' ? {\n            mainAxis: rawValue,\n            crossAxis: 0,\n            alignmentAxis: null\n          } : _objectSpread({\n            mainAxis: 0,\n            crossAxis: 0,\n            alignmentAxis: null\n          }, rawValue), mainAxis = _ref6.mainAxis, crossAxis = _ref6.crossAxis, alignmentAxis = _ref6.alignmentAxis;\n          if (alignment && typeof alignmentAxis === 'number') {\n            crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n          }\n          return _context11.abrupt(\"return\", isVertical ? {\n            x: crossAxis * crossAxisMulti,\n            y: mainAxis * mainAxisMulti\n          } : {\n            x: mainAxis * mainAxisMulti,\n            y: crossAxis * crossAxisMulti\n          });\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\nvar offset = function offset(value) {\n  if (value === void 0) {\n    value = 0;\n  }\n  return {\n    name: 'offset',\n    options: value,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var x, y, diffCoords;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              x = middlewareArguments.x, y = middlewareArguments.y;\n              _context7.next = 3;\n              return convertValueToCoords(middlewareArguments, value);\n            case 3:\n              diffCoords = _context7.sent;\n              return _context7.abrupt(\"return\", {\n                x: x + diffCoords.x,\n                y: y + diffCoords.y,\n                data: diffCoords\n              });\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var _objectSpread3;\n        var x, y, placement, _options5, _options5$mainAxis, checkMainAxis, _options5$crossAxis, checkCrossAxis, _options5$limiter, limiter, detectOverflowOptions, coords, overflow, mainAxis, crossAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement;\n              _options5 = options, _options5$mainAxis = _options5.mainAxis, checkMainAxis = _options5$mainAxis === void 0 ? true : _options5$mainAxis, _options5$crossAxis = _options5.crossAxis, checkCrossAxis = _options5$crossAxis === void 0 ? false : _options5$crossAxis, _options5$limiter = _options5.limiter, limiter = _options5$limiter === void 0 ? {\n                fn: function fn(_ref) {\n                  var x = _ref.x,\n                    y = _ref.y;\n                  return {\n                    x: x,\n                    y: y\n                  };\n                }\n              } : _options5$limiter, detectOverflowOptions = _objectWithoutProperties(_options5, _excluded4);\n              coords = {\n                x: x,\n                y: y\n              };\n              _context8.next = 5;\n              return detectOverflow(middlewareArguments, detectOverflowOptions);\n            case 5:\n              overflow = _context8.sent;\n              mainAxis = getMainAxisFromPlacement(getSide(placement));\n              crossAxis = getCrossAxis(mainAxis);\n              mainAxisCoord = coords[mainAxis];\n              crossAxisCoord = coords[crossAxis];\n              if (checkMainAxis) {\n                minSide = mainAxis === 'y' ? 'top' : 'left';\n                maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                _min = mainAxisCoord + overflow[minSide];\n                _max = mainAxisCoord - overflow[maxSide];\n                mainAxisCoord = within(_min, mainAxisCoord, _max);\n              }\n              if (checkCrossAxis) {\n                _minSide = crossAxis === 'y' ? 'top' : 'left';\n                _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                _min2 = crossAxisCoord + overflow[_minSide];\n                _max2 = crossAxisCoord - overflow[_maxSide];\n                crossAxisCoord = within(_min2, crossAxisCoord, _max2);\n              }\n              limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, middlewareArguments), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, mainAxis, mainAxisCoord), _defineProperty(_objectSpread3, crossAxis, crossAxisCoord), _objectSpread3)));\n              return _context8.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                data: {\n                  x: limitedCoords.x - x,\n                  y: limitedCoords.y - y\n                }\n              }));\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options: options,\n    fn: function fn(middlewareArguments) {\n      var _ref5;\n      var x = middlewareArguments.x,\n        y = middlewareArguments.y,\n        placement = middlewareArguments.placement,\n        rects = middlewareArguments.rects,\n        middlewareData = middlewareArguments.middlewareData;\n      var _options6 = options,\n        _options6$offset = _options6.offset,\n        offset = _options6$offset === void 0 ? 0 : _options6$offset,\n        _options6$mainAxis = _options6.mainAxis,\n        checkMainAxis = _options6$mainAxis === void 0 ? true : _options6$mainAxis,\n        _options6$crossAxis = _options6.crossAxis,\n        checkCrossAxis = _options6$crossAxis === void 0 ? true : _options6$crossAxis;\n      var coords = {\n        x: x,\n        y: y\n      };\n      var mainAxis = getMainAxisFromPlacement(placement);\n      var crossAxis = getCrossAxis(mainAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = typeof offset === 'function' ? offset(middlewareArguments) : offset;\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n      return _ref5 = {}, _defineProperty(_ref5, mainAxis, mainAxisCoord), _defineProperty(_ref5, crossAxis, crossAxisCoord), _ref5;\n    }\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var placement, rects, platform, elements, _options7, _options7$apply, apply, detectOverflowOptions, overflow, side, alignment, heightSide, widthSide, xMin, xMax, yMin, yMax, dimensions, nextDimensions;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n              _options7 = options, _options7$apply = _options7.apply, apply = _options7$apply === void 0 ? function () {} : _options7$apply, detectOverflowOptions = _objectWithoutProperties(_options7, _excluded5);\n              _context9.next = 4;\n              return detectOverflow(middlewareArguments, detectOverflowOptions);\n            case 4:\n              overflow = _context9.sent;\n              side = getSide(placement);\n              alignment = getAlignment(placement);\n              if (!(side === 'top' || side === 'bottom')) {\n                _context9.next = 26;\n                break;\n              }\n              heightSide = side;\n              _context9.t0 = alignment;\n              _context9.next = 12;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 12:\n              if (!_context9.sent) {\n                _context9.next = 16;\n                break;\n              }\n              _context9.t1 = 'start';\n              _context9.next = 17;\n              break;\n            case 16:\n              _context9.t1 = 'end';\n            case 17:\n              _context9.t2 = _context9.t1;\n              if (!(_context9.t0 === _context9.t2)) {\n                _context9.next = 22;\n                break;\n              }\n              _context9.t3 = 'left';\n              _context9.next = 23;\n              break;\n            case 22:\n              _context9.t3 = 'right';\n            case 23:\n              widthSide = _context9.t3;\n              _context9.next = 28;\n              break;\n            case 26:\n              widthSide = side;\n              heightSide = alignment === 'end' ? 'top' : 'bottom';\n            case 28:\n              xMin = max(overflow.left, 0);\n              xMax = max(overflow.right, 0);\n              yMin = max(overflow.top, 0);\n              yMax = max(overflow.bottom, 0);\n              dimensions = {\n                availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n                availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n              };\n              _context9.next = 35;\n              return apply(_objectSpread(_objectSpread({}, middlewareArguments), dimensions));\n            case 35:\n              _context9.next = 37;\n              return platform.getDimensions(elements.floating);\n            case 37:\n              nextDimensions = _context9.sent;\n              if (!(rects.floating.width !== nextDimensions.width || rects.floating.height !== nextDimensions.height)) {\n                _context9.next = 40;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                reset: {\n                  rects: true\n                }\n              });\n            case 40:\n              return _context9.abrupt(\"return\", {});\n            case 41:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"names":["getAlignment","placement","split","getLengthFromAxis","axis","getSide","getMainAxisFromPlacement","includes","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","process","env","NODE_ENV","console","error","join","name","Error","getElementRects","rects","statefulPlacement","middlewareData","resetCount","i","fn","initialPlacement","elements","nextX","nextY","data","reset","warn","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","middlewareArguments","options","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","isElement","_await$platform$isEle","contextElement","getDocumentElement","getClippingRect","clippingClientRect","getOffsetParent","offsetParent","getScale","offsetScale","convertOffsetParentRelativeRectToViewportRelativeRect","elementClientRect","min","Math","max","within","min$1","value","max$1","arrow","getDimensions","arrowDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","offset","shouldAddOffset","alignmentOffset","sides","allPlacements","reduce","acc","concat","oppositeSideMap","getOppositePlacement","replace","getAlignmentSides","alignment","mainAlignmentSide","main","cross","oppositeAlignmentMap","start","end","getOppositeAlignmentPlacement","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","detectOverflowOptions","placements","undefined","overflow","currentIndex","_middlewareData$autoP","index","currentPlacement","currentOverflows","allOverflows","_middlewareData$autoP2","overflows","nextPlacement","placementsSortedByLeastOverflow","slice","sort","a","b","placementThatFitsOnAllSides","_placementsSortedByLe","find","every","resetPlacement","getExpandedPlacements","oppositePlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","map","flip","checkMainAxis","crossAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","isBasePlacement","push","overflowsData","_middlewareData$flip","nextIndex","_middlewareData$flip2","_overflowsData$find","d","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","inline","getBoundingClientRect","clientRects","fallback","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","getClientRects","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","size","apply","heightSide","widthSide","xMin","xMax","yMin","yMax","dimensions","availableHeight","availableWidth","nextDimensions"],"sources":["C:/01_jvg/Codefactory/react-cli/tarea2 - copia/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js"],"sourcesContent":["function getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  if (process.env.NODE_ENV !== \"production\") {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n    if (validMiddleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement` middleware', 'detected. This will lead to an infinite loop. Ensure only one of', 'either has been passed to the `middleware` array.'].join(' '));\n    }\n    if (!reference || !floating) {\n      console.error(['Floating UI: The reference and/or floating element was not defined', 'when `computePosition()` was called. Ensure that both elements have', 'been created and can be measured.'].join(' '));\n    }\n  }\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (process.env.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n      }\n    }\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  if (process.env.NODE_ENV !== \"production\") ;\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = options || {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n    if (element == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n});\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsSortedByLe;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides || placementsSortedByLeastOverflow[0].placement;\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$find;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, try to use the one that fits on mainAxis side of overflow.\n        let resetPlacement = (_overflowsData$find = overflowsData.find(d => d.overflows[0] <= 0)) == null ? void 0 : _overflowsData$find.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = options;\n      const {\n        rects\n      } = middlewareArguments;\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || [];\n      const paddingObject = getSideObjectFromPadding(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nasync function convertValueToCoords(middlewareArguments, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = middlewareArguments;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(middlewareArguments) : value;\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n  return {\n    name: 'offset',\n    options: value,\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y\n      } = middlewareArguments;\n      const diffCoords = await convertValueToCoords(middlewareArguments, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset(middlewareArguments) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      await apply({\n        ...middlewareArguments,\n        ...dimensions\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (rects.floating.width !== nextDimensions.width || rects.floating.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}